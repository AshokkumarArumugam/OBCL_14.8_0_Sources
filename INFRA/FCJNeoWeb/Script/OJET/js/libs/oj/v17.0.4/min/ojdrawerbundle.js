/**
 * @license
 * Copyright (c) 2014, 2024, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define("ojs/ojdrawerutils",["exports","ojs/ojdomutils"],function(e,t){"use strict";const s=oj;class r{static get DrawerLayoutStyleSurrogate(){return`${this.stringOjDrawer}${this.charDash}layout${this.charDash}${this.stringSurrogate}`}static get DrawerPopupStyleSurrogate(){return`${this.stringOjDrawer}${this.charDash}popup${this.charDash}${this.stringSurrogate}`}static styleDisplayMode(e){return`${this.stringOjDrawer}${this.charDash}${e}`}static get styleOpened(){return`${this.stringOjDrawer}${this.charDash}${this.stringOpened}`}static get styleFixedInViewport(){return`${this.stringOjDrawer}${this.charDash}fixed-in-viewport`}static get styleDrawerHidden(){return`${this.stringOjDrawer}${this.charDash}hidden`}static get clippingAreaSelector(){return`${this.stringOjDrawer}${this.charDash}${this.stringClippingArea}`}static get styleStartDrawer(){return`${this.stringOjDrawer}${this.charDash}${this.stringStart}`}static get styleEndDrawer(){return`${this.stringOjDrawer}${this.charDash}${this.stringEnd}`}static get styleBottomDrawer(){return`${this.stringOjDrawer}${this.charDash}${this.stringBottom}`}static get middleSectionSelector(){return`${this.stringOjDrawer}${this.charDash}${this.stringMiddleSection}`}static get mainContentSelector(){return`${this.stringOjDrawer}${this.charDash}${this.stringMainContent}`}static get styleReflow(){return`${this.stringOjDrawer}${this.charDash}${this.stringReflow}`}static get styleOverlay(){return`${this.stringOjDrawer}${this.charDash}${this.stringOverlay}`}}r.displayTypeChangeThreshold=1024,r.fullWidthDrawerChangeThreshold=600,r.fullHeightDrawerChangeThreshold=600,r.charDash="-",r.charSpace=" ",r.stringOjDrawer="oj-drawer",r.stringStart="start",r.stringEnd="end",r.stringTop="top",r.stringBottom="bottom",r.stringMiddleSection="layout-middle-section",r.stringMainContent="layout-main-content",r.stringClippingArea="clipping-area",r.stringStyleClassDisableOverflow="oj-drawer-disable-body-overflow",r.stringSurrogate="surrogate",r.stringOpened="opened",r.stringClosed="closed",r.stringClosedWithEsc="ClosedWithEsc",r.stringShouldChangeDisplayMode="ShouldChangeDisplayMode",r.stringStateToChangeTo="StateToChangeTo",r.stringPrevState="PrevState",r.stringReflow="reflow",r.stringOverlay="overlay",r.stringFullOverlay="full-overlay",r.stringDisplay="Display",r.stringResize="resize",r.stringLeft="left",r.stringRight="right",r.stringOpen="open",r.stringClose="close",r.stringSlideIn="slideIn",r.stringSlideOut="slideOut",r.stringWidth="width",r.stringHeight="height",r.animationDuration=300,r.keys={ESC:"Escape",TAB:"Tab"};class n{static capitalizeFirstChar(e){return e.charAt(0).toUpperCase()+e.slice(1)}static disableBodyOverflow(){document.body.classList.add(r.stringStyleClassDisableOverflow)}static enableBodyOverflow(){document.body.classList.remove(r.stringStyleClassDisableOverflow)}static getElement(e){return document.querySelector(e)}static getElementHeight(e){return Math.round(e.offsetHeight)}static getElementWidth(e){return Math.round(e.getBoundingClientRect().width)}static getAutofocusFocusables(e){return Array.from(e.querySelectorAll('[autofocus]:not([tabindex="-1"]):not([disabled]):not([hidden])')).filter(e=>!this.isHidden(e))}static getFocusables(e){const t=["button","[href]","input","select","textarea","[tabindex]","video"],s=t.length;let r="";for(let e=0;e<s;e++){const n=`${t[e]}:not([tabindex="-1"]):not([disabled]):not([hidden])`;r+=e<s-1?`${n}, `:`${n}`}return Array.from(e.querySelectorAll(r)).filter(e=>!this.isHidden(e))}static isHidden(e){if(null===e.offsetParent)return!0;if(s.AgentUtils.getAgentInfo().browser===s.AgentUtils.BROWSER.FIREFOX&&e.offsetParent===document.body)return!0;return"hidden"===window.getComputedStyle(e).visibility}static isFocusable(e){return!(!e||!e.parentElement)&&n.getFocusables(e.parentElement).some(t=>t===e)}static isObjectEmpty(e){return"object"!=typeof e||0===Object.keys(e).length&&e.constructor===Object}static isRTL(){return"rtl"===t.getReadingDirection()}static getAnimationOptions(e,t){let s;switch(t){case r.stringStart:s=e===r.stringSlideIn?this.isRTL()?r.stringLeft:r.stringRight:e===r.stringSlideOut?this.isRTL()?r.stringRight:r.stringLeft:r.stringWidth;break;case r.stringEnd:s=e===r.stringSlideIn?this.isRTL()?r.stringRight:r.stringLeft:e===r.stringSlideOut?this.isRTL()?r.stringLeft:r.stringRight:r.stringWidth;break;case r.stringBottom:s=e===r.stringSlideIn?r.stringTop:e===r.stringSlideOut?r.stringBottom:r.stringHeight}return{direction:s,duration:`${r.animationDuration}ms`}}static getCommonStyleClasses(e){return{[r.styleStartDrawer]:e===r.stringStart,[r.styleEndDrawer]:e===r.stringEnd,[r.styleBottomDrawer]:e===r.stringBottom}}static getStyleClassesMapAsString(e){let t="";for(let s in e)e[s]&&(t+=t?r.charSpace+s:s);return t}static getViewportWidth(){return s.AgentUtils.getAgentInfo().os===s.AgentUtils.OS.IOS?document.documentElement.clientWidth:window.innerWidth}static getViewportHeight(){return s.AgentUtils.getAgentInfo().os===s.AgentUtils.OS.IOS?document.documentElement.clientHeight:window.innerHeight}static moveFocusToElementOrNearestAncestor(e){if(n.isFocusable(e))e.focus();else{let t=e.parentElement;for(;t&&"HTML"!==t.nodeName&&!n.isFocusable(t);)t=t.parentElement;t&&t.focus()}}static wrapDrawerWithClippingArea(e,t){const s=$(e).wrap(function(){const e=document.createElement("div");return e.setAttribute("id",r.clippingAreaSelector),e.style.overflow="hidden",e.style.position="absolute",$(e)}).parent()[0];s.style.setProperty("height",n.getElementHeight(e)+"px"),s.style.setProperty("width",n.getElementWidth(e)+"px"),$(s).position(t),e.style.setProperty("position","static")}static unwrapDrawerClippingArea(e){e&&(e.style.removeProperty("position"),$(e).unwrap())}}e.DrawerConstants=r,e.DrawerUtils=n,Object.defineProperty(e,"__esModule",{value:!0})}),define("ojs/ojdrawerpopup",["exports","preact/jsx-runtime","ojs/ojvcomponent","preact","jquery","ojs/ojanimation","ojs/ojcore-base","ojs/ojpopup","ojs/ojdrawerutils","hammerjs","ojs/ojcustomelement-utils"],function(e,t,s,r,n,a,i,o,l,d,h){"use strict";n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n,d=d&&Object.prototype.hasOwnProperty.call(d,"default")?d.default:d;var p,w=function(e,t,s,r){var n,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,s):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,s,r);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(i=(a<3?n(i):a>3?n(t,s,i):n(t,s))||i);return a>3&&i&&Object.defineProperty(t,s,i),i};const g=oj,D=oj.PopupService,c=window,u=oj.ZOrderUtils;e.DrawerPopup=p=class extends r.Component{constructor(){super(...arguments),this.state={opened:this.props.opened,viewportResolvedDisplayMode:this.getViewportResolvedDisplayMode(),viewportResolvedDisplayModeVertical:this.getViewportResolvedDisplayModeVertical()},this.rootRef=r.createRef(),this.windowResizeHandler=null,this.ignoreUpdate=!1,this.handleGuardFocus=(e,t)=>{if("modal"===this.props.modality){const s=l.DrawerUtils.getFocusables(this.rootRef.current),{length:r,0:n,[r-1]:a}=s;if(t.preventDefault(),!r)return void this.rootRef.current.focus();"start"===e?a.focus():n.focus()}},this.handleOnStartGuardFocus=e=>{this.handleGuardFocus("start",e)},this.handleOnEndGuardFocus=e=>{this.handleGuardFocus("end",e)},this.handleKeyDown=e=>{e.defaultPrevented||e.key!==l.DrawerConstants.keys.ESC||this.selfClose()},this.autoDismissHandler=e=>{l.DrawerUtils.getFocusables(this.rootRef.current);const t=this.rootRef.current.parentNode,s=this.isTargetDescendantOfOwnZorderLayerOrItsNextSiblings(t,e.target);"focus-loss"!==this.props.autoDismiss||s?"none"!==this.props.autoDismiss||"modal"!==this.props.modality||s||e.preventDefault():this.selfClose()},this.refreshHandler=e=>{D.getInstance().triggerOnDescendents(n(this.rootRef.current),D.EVENT.POPUP_REFRESH)},this.destroyHandler=()=>{const e=n(this.rootRef.current);if(u.getStatus(e)===u.STATUS.OPEN){h.CustomElementUtils.cleanComponentBindings(e[0]),e.remove();const t={};t[D.OPTION.POPUP]=e,this.ignoreUpdate=!0,D.getInstance().close(t)}},this.isTargetDescendantOfOwnZorderLayerOrItsNextSiblings=(e,t)=>{const s=[e];let r=e.nextSibling;for(;r;)s.push(r),r=r.nextSibling;return s.some(e=>e.contains(t))},this.windowResizeCallback=()=>{const e={},t=this.state.viewportResolvedDisplayMode,s=this.getViewportResolvedDisplayMode();t!==s&&(e.viewportResolvedDisplayMode=s);const r=this.state.viewportResolvedDisplayModeVertical,n=this.getViewportResolvedDisplayModeVertical();r!==n&&(e.viewportResolvedDisplayModeVertical=n),this.isDrawerOpened()&&t===l.DrawerConstants.stringFullOverlay&&s===l.DrawerConstants.stringOverlay&&(this.isIOSspecificScrollCase()?this.applyPopupServiceModalChanges("modeless"):this.isAndroidSpecificScrollCase()&&l.DrawerUtils.enableBodyOverflow()),this.isDrawerOpened()&&t===l.DrawerConstants.stringOverlay&&s===l.DrawerConstants.stringFullOverlay&&(this.isIOSspecificScrollCase()?this.applyPopupServiceModalChanges("modal"):this.isAndroidSpecificScrollCase()&&l.DrawerUtils.disableBodyOverflow()),Object.keys(e).length>0&&this.setState(e)},this.handleSwipeAction=()=>{this.selfClose()}}static getDerivedStateFromProps(e,t){return e.opened!==t.opened?{opened:e.opened}:null}render(e){return this.ignoreUpdate||!this.isDrawerOpened()&&!this.wasDrawerOpenedInPrevState()?t.jsx(s.Root,{}):t.jsx(s.Root,{ref:this.rootRef,class:this.getPopupStyleClasses(this.props.edge),tabIndex:-1,role:this.props.role||"dialog",onKeyDown:this.handleKeyDown,children:t.jsxs("div",{class:"oj-drawer-full-height",children:[t.jsx("div",{class:"oj-drawer-focus-guard",onFocus:this.handleOnStartGuardFocus,tabIndex:0}),e.children,t.jsx("div",{class:"oj-drawer-focus-guard",onFocus:this.handleOnEndGuardFocus,tabIndex:0})]})})}isDrawerOpened(){return this.state[l.DrawerConstants.stringOpened]}wasDrawerOpenedInPrevState(){return this.openedPrevState}async selfClose(){try{await(this.props.onOjBeforeClose?.())}catch(e){return}this.props.onOpenedChanged?.(!1)}openOrCloseDrawer(e){this.isDrawerOpened()!=e.opened&&(this.openedPrevState=this.isDrawerOpened());const t=n(this.rootRef.current),s=D.getInstance(),r=this.getPopupServiceOptions(e);this.isDrawerOpened()?[u.STATUS.CLOSE,u.STATUS.UNKNOWN].indexOf(u.getStatus(t)>-1)&&s.open(r):u.getStatus(t)===u.STATUS.OPEN&&(this.isIOSspecificScrollCase()&&this.getViewportResolvedDisplayMode()===l.DrawerConstants.stringFullOverlay&&this.applyPopupServiceModalChanges("modeless"),s.close(r))}getPopupServiceOptions(e){const t=this.props.edge,s=n(this.rootRef.current),r={},a=D.OPTION;r[a.POPUP]=s,r[a.LAUNCHER]=n(document.activeElement),r[a.MODALITY]=this.props.modality,r[a.LAYER_SELECTORS]=this.getDrawerSurrogateLayerSelectors(),r[a.LAYER_LEVEL]=D.LAYER_LEVEL.TOP_LEVEL,r[a.POSITION]=null,r[a.CUSTOM_ELEMENT]=!0;const i=D.EVENT;return r[a.EVENTS]={[i.POPUP_BEFORE_OPEN]:()=>this.beforeOpenHandler(t,r),[i.POPUP_AFTER_OPEN]:()=>this.afterOpenHandler(t,e),[i.POPUP_BEFORE_CLOSE]:()=>this.beforeCloseHandler(t),[i.POPUP_AFTER_CLOSE]:()=>this.afterCloseHandler(e),[i.POPUP_AUTODISMISS]:e=>this.autoDismissHandler(e),[i.POPUP_REFRESH]:()=>this.refreshHandler(t),[i.POPUP_REMOVE]:()=>this.destroyHandler()},r}beforeOpenHandler(e,t){l.DrawerUtils.disableBodyOverflow(),this.drawerOpener=document.activeElement,t[D.OPTION.POPUP].show();const s=g.Context.getContext(this.rootRef.current).getBusyContext().addBusyState({description:"Animation in progress"}),r=a.slideIn(this.rootRef.current,l.DrawerUtils.getAnimationOptions(l.DrawerConstants.stringSlideIn,e));return r.then(s),r}afterOpenHandler(e,t){l.DrawerUtils.enableBodyOverflow(),this.isIOSspecificScrollCase()&&this.getViewportResolvedDisplayMode()===l.DrawerConstants.stringFullOverlay&&this.applyPopupServiceModalChanges("modal"),this.isAndroidSpecificScrollCase()&&this.getViewportResolvedDisplayMode()===l.DrawerConstants.stringFullOverlay&&l.DrawerUtils.disableBodyOverflow(),this.handleFocus(t);const s=n(this.rootRef.current);if(u.getStatus(s)===u.STATUS.OPEN&&!this.isDrawerOpened()){const e=D.getInstance(),s=this.getPopupServiceOptions(t);e.close(s)}}handleFocus(e){if(this.state.opened&&e.opened!==this.state.opened){const e=this.rootRef.current,t=l.DrawerUtils.getAutofocusFocusables(e),{length:s,0:r}=t;if(s>0)return void r.focus({preventScroll:!0});const n=l.DrawerUtils.getFocusables(e);let a=e;n.length&&(a=n[0]),a.focus({preventScroll:!0})}}beforeCloseHandler(e){if(l.DrawerUtils.disableBodyOverflow(),this.elementWithFocusBeforeDrawerCloses=document.activeElement,this.ignoreUpdate)return null;const t=g.Context.getContext(this.rootRef.current).getBusyContext().addBusyState({description:"Animation in progress"});return a.slideOut(this.rootRef.current,l.DrawerUtils.getAnimationOptions(l.DrawerConstants.stringSlideOut,e)).then(t)}afterCloseHandler(e){if(l.DrawerUtils.enableBodyOverflow(),this.rootRef.current.contains(this.elementWithFocusBeforeDrawerCloses)&&l.DrawerUtils.moveFocusToElementOrNearestAncestor(this.drawerOpener),this.ignoreUpdate)return;const t=n(this.rootRef.current);if(u.getStatus(t)===u.STATUS.CLOSE&&this.isDrawerOpened()){const t=D.getInstance(),s=this.getPopupServiceOptions(e);t.open(s)}else this.wasDrawerOpenedInPrevState()||window.queueMicrotask(()=>{this.forceUpdate()});this.props.onOjClose?.()}getDrawerSurrogateLayerSelectors(){let e=l.DrawerConstants.DrawerPopupStyleSurrogate;const t="modal";return this.props.modality===t&&(e+=` ${l.DrawerConstants.stringOjDrawer}${l.DrawerConstants.charDash}${t}`),e}getPopupStyleClasses(e){const t={};return e===l.DrawerConstants.stringBottom?this.getViewportResolvedDisplayModeVertical()!==l.DrawerConstants.stringFullOverlay&&this.getViewportResolvedDisplayMode()!==l.DrawerConstants.stringFullOverlay||(t[l.DrawerConstants.styleDisplayMode(l.DrawerConstants.stringFullOverlay)]=!0):this.getViewportResolvedDisplayMode()===l.DrawerConstants.stringFullOverlay&&(t[l.DrawerConstants.styleDisplayMode(l.DrawerConstants.stringFullOverlay)]=!0),l.DrawerUtils.getStyleClassesMapAsString(Object.assign(t,l.DrawerUtils.getCommonStyleClasses(e)))}componentDidUpdate(e,t){this.ignoreUpdate||this.handleComponentUpdate(t)}componentDidMount(){if(null===this.windowResizeHandler&&(this.windowResizeHandler=this.windowResizeCallback.bind(this)),window.addEventListener(l.DrawerConstants.stringResize,this.windowResizeHandler),this.openedPrevState=this.props.opened,p.defaultProps.opened!=this.props.opened){const e=Object.assign({},this.state);e.opened=!1,this.handleComponentUpdate(e)}}componentWillUnmount(){window.removeEventListener(l.DrawerConstants.stringResize,this.windowResizeHandler),this.windowResizeHandler=null}getViewportResolvedDisplayMode(){return l.DrawerUtils.getViewportWidth()>=l.DrawerConstants.fullWidthDrawerChangeThreshold?l.DrawerConstants.stringOverlay:l.DrawerConstants.stringFullOverlay}getViewportResolvedDisplayModeVertical(){return l.DrawerUtils.getViewportHeight()>=l.DrawerConstants.fullHeightDrawerChangeThreshold?l.DrawerConstants.stringOverlay:l.DrawerConstants.stringFullOverlay}handleComponentUpdate(e){this.openOrCloseDrawer(e),this.isDrawerOpened()&&"swipe"===this.props.closeGesture&&this.registerCloseWithSwipeListener(),!1===this.isDrawerOpened()&&e.opened&&this.unregisterCloseWithSwipeListener()}registerCloseWithSwipeListener(){this.hammerInstance=new d(c),this.props.edge===l.DrawerConstants.stringBottom&&this.hammerInstance.get("swipe").set({direction:d.DIRECTION_DOWN}),this.hammerInstance.on(this.getSwipeCloseDirection(this.props.edge),this.handleSwipeAction)}getSwipeCloseDirection(e){const t="swipeleft",s="swiperight";switch(e){case l.DrawerConstants.stringStart:return l.DrawerUtils.isRTL()?s:t;case l.DrawerConstants.stringEnd:return l.DrawerUtils.isRTL()?t:s;case l.DrawerConstants.stringBottom:return"swipedown"}}unregisterCloseWithSwipeListener(){this.hammerInstance&&this.hammerInstance.off(this.getSwipeCloseDirection(this.props.edge),this.handleSwipeAction)}isIOSspecificScrollCase(){return g.AgentUtils.getAgentInfo().os===g.AgentUtils.OS.IOS&&"modeless"===this.props.modality}isAndroidSpecificScrollCase(){return g.AgentUtils.getAgentInfo().os===g.AgentUtils.OS.ANDROID&&"modeless"===this.props.modality}applyPopupServiceModalChanges(e){const t={},s=D.OPTION;t[s.POPUP]=n(this.rootRef.current),t[s.MODALITY]=e,D.getInstance().changeOptions(t)}},e.DrawerPopup.defaultProps={autoDismiss:"focus-loss",edge:"start",modality:"modal",opened:!1,closeGesture:"swipe"},e.DrawerPopup._metadata={slots:{"":{}},properties:{opened:{type:"boolean",writeback:!0},edge:{type:"string",enumValues:["end","start","bottom"]},modality:{type:"string",enumValues:["modal","modeless"]},autoDismiss:{type:"string",enumValues:["none","focus-loss"]},closeGesture:{type:"string",enumValues:["none","swipe"]}},events:{ojBeforeClose:{cancelable:!0},ojClose:{}},extension:{_WRITEBACK_PROPS:["opened"],_READ_ONLY_PROPS:[],_OBSERVED_GLOBAL_PROPS:["role"]}},e.DrawerPopup=p=w([s.customElement("oj-drawer-popup")],e.DrawerPopup),Object.defineProperty(e,"__esModule",{value:!0})}),define("ojs/ojdrawerlayout",["exports","preact/jsx-runtime","ojs/ojvcomponent","preact","jquery","ojs/ojanimation","ojs/ojdomutils","ojs/ojcore-base","ojs/ojpopup","ojs/ojdrawerutils"],function(e,t,s,r,n,a,i,o,l,d){"use strict";n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;var h,p=function(e,t,s,r){var n,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,s):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,s,r);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(i=(a<3?n(i):a>3?n(t,s,i):n(t,s))||i);return a>3&&i&&Object.defineProperty(t,s,i),i};const w=oj,g=w.PopupService,D=w.ZOrderUtils;e.DrawerLayout=h=class extends r.Component{constructor(){super(...arguments),this.rootRef=r.createRef(),this.startWrapperRef=r.createRef(),this.startRef=r.createRef(),this.endWrapperRef=r.createRef(),this.endRef=r.createRef(),this.bottomWrapperRef=r.createRef(),this.bottomRef=r.createRef(),this.middleSectionRef=r.createRef(),this.mainSectionRef=r.createRef(),this.startClosedWithEsc=!1,this.endClosedWithEsc=!1,this.bottomClosedWithEsc=!1,this.startOverlayDrawerResizeHandler=null,this.endOverlayDrawerResizeHandler=null,this.bottomOverlayDrawerResizeHandler=null,this.startReflowDrawerResizeHandler=null,this.endReflowDrawerResizeHandler=null,this.drawerLayoutResizeHandler=null,this.windowResizeHandler=null,this.handleResize=!0,this.state={startOpened:this.props.startOpened,endOpened:this.props.endOpened,bottomOpened:this.props.bottomOpened,startDisplay:this.props.startDisplay,endDisplay:this.props.endDisplay,bottomDisplay:this.props.bottomDisplay,startShouldChangeDisplayMode:!1,endShouldChangeDisplayMode:!1,bottomShouldChangeDisplayMode:!1,startStateToChangeTo:null,endStateToChangeTo:null,bottomStateToChangeTo:null,viewportResolvedDisplayMode:this.getViewportResolvedDisplayMode(),viewportResolvedDisplayModeVertical:this.getViewportResolvedDisplayModeVertical(),lastlyOpenedDrawer:d.DrawerConstants.stringStart},this.handleKeyDown=(e,t)=>{if(t.defaultPrevented)return;const s=this.getDrawerResolvedDisplayMode(e);t.key!==d.DrawerConstants.keys.ESC||s!==d.DrawerConstants.stringOverlay&&s!==d.DrawerConstants.stringFullOverlay||(this[this.edgeToClosedWithEsc(e)]=!0,this.selfClose(e))},this.getRefToAnimate=e=>this.getDrawerResolvedDisplayMode(e)===d.DrawerConstants.stringReflow?this.getDrawerWrapperRef(e):this.getDrawerRef(e),this.overlayDrawerResizeCallback=e=>{n(this.getDrawerRef(e).current).position(this.getDrawerPosition(e))},this.reflowDrawerResizeCallback=()=>{this.setBottomOverlayDrawerWidth()},this.drawerLayoutResizeCallback=()=>{this.setStartEndOverlayDrawersHeight(),this.setBottomOverlayDrawerWidth()},this.lockResizeListener=()=>{this.handleResize&&(this.handleResize=!1,setTimeout(()=>{this.handleResize=!0;const e={};if(this.state.viewportResolvedDisplayMode!==this.getViewportResolvedDisplayMode()){const t=[d.DrawerConstants.stringStart,d.DrawerConstants.stringEnd];for(let s=0;s<t.length;s++){const r=t[s];this.isDrawerOpened(r)&&"auto"===this.state[this.edgeToDisplayName(r)]&&(e[this.edgeToShouldChangeDisplayMode(r)]=!0)}}this.state.viewportResolvedDisplayModeVertical!==this.getViewportResolvedDisplayModeVertical()&&this.isDrawerOpened(d.DrawerConstants.stringBottom)&&"auto"===this.state[this.edgeToDisplayName(d.DrawerConstants.stringBottom)]&&(e[this.edgeToShouldChangeDisplayMode(d.DrawerConstants.stringBottom)]=!0),Object.keys(e).length>0||(e.viewportResolvedDisplayMode=this.getViewportResolvedDisplayMode()),this.setState(e)},d.DrawerConstants.animationDuration+50))},this.refreshHandler=e=>{const t=n(this.getDrawerRef(e).current);t.position(this.getDrawerPosition(e)),[d.DrawerConstants.stringStart,d.DrawerConstants.stringEnd].indexOf(e)>-1&&this.setStartEndOverlayDrawersHeight(),this.setBottomOverlayDrawerWidth(),g.getInstance().triggerOnDescendents(t,g.EVENT.POPUP_REFRESH)},this.destroyHandler=e=>{const t=n(this.getDrawerRef(e).current);D.getStatus(t)===D.STATUS.OPEN&&D.removeFromAncestorLayer(t)},this.windowResizeCallback=()=>{if(this.handleResize){const e=this.state.viewportResolvedDisplayMode,t=this.getViewportResolvedDisplayMode(),s=this.state.viewportResolvedDisplayModeVertical,r=this.getViewportResolvedDisplayModeVertical();this.setBottomOverlayDrawerWidth();let n=!1;const a={},i=()=>{this.isDrawerOpened(d.DrawerConstants.stringBottom)&&"auto"===this.state[this.edgeToDisplayName(d.DrawerConstants.stringBottom)]&&(n=!0,a[this.edgeToShouldChangeDisplayMode(d.DrawerConstants.stringBottom)]=!0)};if(e!==t){this.lockResizeListener();const s=[d.DrawerConstants.stringStart,d.DrawerConstants.stringEnd];for(let e=0;e<s.length;e++){const t=s[e];this.isDrawerOpened(t)&&"auto"===this.state[this.edgeToDisplayName(t)]&&(n=!0,a[this.edgeToShouldChangeDisplayMode(t)]=!0)}const r=[d.DrawerConstants.stringReflow,d.DrawerConstants.stringOverlay];r.indexOf(e)>-1&&r.indexOf(t)>-1&&i()}s!==r&&e===d.DrawerConstants.stringReflow&&i(),!1===n&&(a.viewportResolvedDisplayMode=t,a.viewportResolvedDisplayModeVertical=r),Object.keys(a).length>0&&this.setState(a)}},this.getDrawerPosition=e=>{const t=`${e===d.DrawerConstants.stringBottom?d.DrawerConstants.stringStart:e} ${e===d.DrawerConstants.stringBottom?d.DrawerConstants.stringBottom:d.DrawerConstants.stringTop}`;let s={my:t,at:t,of:this.mainSectionRef.current,collision:"none"};return oj.PositionUtils.normalizeHorizontalAlignment(s,d.DrawerUtils.isRTL())}}static getDerivedStateFromProps(e,t){const s={};return t.startOpened&&e.startDisplay!==t.startDisplay?(s[`${d.DrawerConstants.stringStart}${d.DrawerConstants.stringStateToChangeTo}`]={startDisplay:e.startDisplay},s):t.endOpened&&e.endDisplay!==t.endDisplay?(s[`${d.DrawerConstants.stringEnd}${d.DrawerConstants.stringStateToChangeTo}`]={endDisplay:e.endDisplay},s):t.bottomOpened&&e.bottomDisplay!==t.bottomDisplay?(s[`${d.DrawerConstants.stringBottom}${d.DrawerConstants.stringStateToChangeTo}`]={bottomDisplay:e.bottomDisplay},s):(e.startOpened!==t.startOpened&&(s.startOpened=e.startOpened,e.startOpened&&(s.lastlyOpenedDrawer=d.DrawerConstants.stringStart)),e.endOpened!==t.endOpened&&(s.endOpened=e.endOpened,e.endOpened&&(s.lastlyOpenedDrawer=d.DrawerConstants.stringEnd)),e.bottomOpened!==t.bottomOpened&&(s.bottomOpened=e.bottomOpened,e.bottomOpened&&(s.lastlyOpenedDrawer=d.DrawerConstants.stringBottom)),e.startDisplay!==t.startDisplay&&(s.startDisplay=e.startDisplay),e.endDisplay!==t.endDisplay&&(s.endDisplay=e.endDisplay),e.bottomDisplay!==t.bottomDisplay&&(s.bottomDisplay=e.bottomDisplay),0===Object.keys(s).length?null:s)}render(e){let r=this.getDrawer(d.DrawerConstants.stringStart),n=this.getDrawer(d.DrawerConstants.stringEnd),a=this.getDrawer(d.DrawerConstants.stringBottom);return t.jsxs(s.Root,{ref:this.rootRef,children:[r,t.jsxs("div",{ref:this.middleSectionRef,class:d.DrawerConstants.middleSectionSelector,children:[t.jsx("div",{ref:this.mainSectionRef,class:d.DrawerConstants.mainContentSelector,children:e.children}),a]}),n]})}getDrawer(e){const s=this.getDrawerResolvedDisplayMode(e),r=s===d.DrawerConstants.stringOverlay||s===d.DrawerConstants.stringFullOverlay?-1:void 0;return this.isDrawerOpened(e)||this.wasDrawerOpenedInPrevState(e)||this.wasDrawerClosedWithEsc(e)?t.jsx("div",{ref:this.getDrawerWrapperRef(e),class:this.getDrawerWrapperStyleClasses(e),children:t.jsx("div",{ref:this.getDrawerRef(e),tabIndex:r,class:this.getDrawerStyleClasses(e),onKeyDown:t=>this.handleKeyDown(e,t),children:this.getDrawerContent(e)})}):null}isDrawerOpened(e){return this.state[this.edgeToStateOpenedName(e)]}wasDrawerOpenedInPrevState(e){return this[this.edgeToPrevStateOpenedName(e)]}wasDrawerClosedWithEsc(e){return this[this.edgeToClosedWithEsc(e)]}getDrawerWrapperRef(e){switch(e){case d.DrawerConstants.stringStart:return this.startWrapperRef;case d.DrawerConstants.stringEnd:return this.endWrapperRef;case d.DrawerConstants.stringBottom:return this.bottomWrapperRef}}getDrawerRef(e){switch(e){case d.DrawerConstants.stringStart:return this.startRef;case d.DrawerConstants.stringEnd:return this.endRef;case d.DrawerConstants.stringBottom:return this.bottomRef}}getDrawerContent(e){switch(e){case d.DrawerConstants.stringStart:return this.props.start;case d.DrawerConstants.stringEnd:return this.props.end;case d.DrawerConstants.stringBottom:return this.props.bottom}}getDrawerWrapperStyleClasses(e){return`${d.DrawerConstants.stringOjDrawer}${d.DrawerConstants.charDash}${d.DrawerConstants.stringReflow}-wrapper `+this.getDrawerStyleClasses(e)}getDrawerStyleClasses(e){let t;switch(this.getDrawerResolvedDisplayMode(e)){case d.DrawerConstants.stringReflow:t={[d.DrawerConstants.styleDisplayMode(d.DrawerConstants.stringReflow)]:!0};break;case d.DrawerConstants.stringOverlay:t={[d.DrawerConstants.styleDisplayMode(d.DrawerConstants.stringOverlay)]:!0};break;case d.DrawerConstants.stringFullOverlay:t={[d.DrawerConstants.styleDisplayMode(d.DrawerConstants.stringOverlay)]:!0,[d.DrawerConstants.styleDisplayMode(d.DrawerConstants.stringFullOverlay)]:!0}}return d.DrawerUtils.getStyleClassesMapAsString(Object.assign(t,d.DrawerUtils.getCommonStyleClasses(e)))}getDrawerResolvedDisplayMode(e){const t=this.edgeToDisplayName(e);if("auto"===this.state[t])return e===d.DrawerConstants.stringBottom?this.state.viewportResolvedDisplayModeVertical===d.DrawerConstants.stringFullOverlay||this.state.viewportResolvedDisplayMode===d.DrawerConstants.stringFullOverlay?d.DrawerConstants.stringFullOverlay:this.state.viewportResolvedDisplayModeVertical===d.DrawerConstants.stringOverlay||this.state.viewportResolvedDisplayMode===d.DrawerConstants.stringOverlay?d.DrawerConstants.stringOverlay:d.DrawerConstants.stringReflow:this.state.viewportResolvedDisplayMode;if(this.state[t]===d.DrawerConstants.stringReflow)return d.DrawerConstants.stringReflow;if(this.state[t]===d.DrawerConstants.stringOverlay){return(e===d.DrawerConstants.stringBottom?this.state.viewportResolvedDisplayModeVertical:this.state.viewportResolvedDisplayMode)===d.DrawerConstants.stringFullOverlay?d.DrawerConstants.stringFullOverlay:d.DrawerConstants.stringOverlay}}getViewportResolvedDisplayMode(){const e=d.DrawerUtils.getViewportWidth();return e>=d.DrawerConstants.displayTypeChangeThreshold?d.DrawerConstants.stringReflow:e<d.DrawerConstants.displayTypeChangeThreshold&&e>=d.DrawerConstants.fullWidthDrawerChangeThreshold?d.DrawerConstants.stringOverlay:d.DrawerConstants.stringFullOverlay}getViewportResolvedDisplayModeVertical(){return d.DrawerUtils.getViewportHeight()>=d.DrawerConstants.fullHeightDrawerChangeThreshold?d.DrawerConstants.stringReflow:d.DrawerConstants.stringFullOverlay}async selfClose(e){try{await(this.props.onOjBeforeClose?.({edge:e}))}catch(e){return}e===d.DrawerConstants.stringStart&&this.props.onStartOpenedChanged?.(!1),e===d.DrawerConstants.stringEnd&&this.props.onEndOpenedChanged?.(!1),e===d.DrawerConstants.stringBottom&&this.props.onBottomOpenedChanged?.(!1)}setDrawerFocus(e){const t=this.getDrawerRef(e),s=d.DrawerUtils.getAutofocusFocusables(t.current),{length:r,0:n}=s;if(r>0)return void n.focus({preventScroll:!0});const a=d.DrawerUtils.getFocusables(t.current);let i=t.current;a.length&&(i=a[0]),i.focus({preventScroll:!0})}componentDidUpdate(e,t){this.handleComponentUpdate(t)}componentDidMount(){if(this.startOpenedPrevState=this.props.startOpened,this.endOpenedPrevState=this.props.endOpened,this.bottomOpenedPrevState=this.props.bottomOpened,null===this.windowResizeHandler&&(this.windowResizeHandler=this.windowResizeCallback.bind(this)),window.addEventListener(d.DrawerConstants.stringResize,this.windowResizeHandler),h.defaultProps.startOpened!=this.props.startOpened||h.defaultProps.endOpened!=this.props.endOpened||h.defaultProps.bottomOpened!=this.props.bottomOpened){const e=Object.assign({},this.state);e.startOpened=!1,e.endOpened=!1,e.bottomOpened=!1,this.handleComponentUpdate(e)}}componentWillUnmount(){window.removeEventListener(d.DrawerConstants.stringResize,this.windowResizeHandler),this.windowResizeHandler=null,this.removeDrawerLayoutResizeListener()}removeDrawerLayoutResizeListener(){this.drawerLayoutResizeHandler&&(i.removeResizeListener(this.rootRef.current,this.drawerLayoutResizeHandler),this.drawerLayoutResizeHandler=null)}handleComponentUpdate(e){let t=[d.DrawerConstants.stringStart,d.DrawerConstants.stringEnd,d.DrawerConstants.stringBottom];t=t.filter(e=>e!=this.state.lastlyOpenedDrawer),this.openOrCloseDrawer(t[0],e),this.openOrCloseDrawer(t[1],e),this.openOrCloseDrawer(this.state.lastlyOpenedDrawer,e)}openOrCloseDrawer(e,t){const s=this.edgeToStateOpenedName(e);if(this.isDrawerOpened(e)!=t[s]||this.shouldDrawerChangeDisplayMode(e)||this.isDrawerOpened(e)&&t[s]){this.isDrawerOpened(e)!=t[s]&&(this[this.edgeToPrevStateOpenedName(e)]=this.isDrawerOpened(e));this.getDrawerResolvedDisplayMode(e)===d.DrawerConstants.stringReflow?this.openOrCloseReflowDrawer(e,t):this.openOrClosePopupDrawer(e,t)}}openOrCloseReflowDrawer(e,t){!1===this.isDrawerOpened(e)||this.shouldDrawerChangeDisplayMode(e)||this.getStateToChangeTo(e)?(this.elementWithFocusBeforeDrawerCloses=document.activeElement,this.animateClose(e).then(()=>{const t=this.getDrawerRef(e).current;if(t&&(e===d.DrawerConstants.stringStart?(i.removeResizeListener(t,this.startReflowDrawerResizeHandler),this.startReflowDrawerResizeHandler=null):e===d.DrawerConstants.stringEnd&&(i.removeResizeListener(t,this.endReflowDrawerResizeHandler),this.endReflowDrawerResizeHandler=null)),this.returnFocus(e),this.getStateToChangeTo(e)){const t={},s={};s[this.edgeToStateToChangeTo(e)]=null,Object.assign(t,this.getStateToChangeTo(e),s),this.setState(t)}else if(this.shouldDrawerChangeDisplayMode(e)){const t={};t[this.edgeToShouldChangeDisplayMode(e)]=!1,t.viewportResolvedDisplayMode=this.getViewportResolvedDisplayMode(),t.viewportResolvedDisplayModeVertical=this.getViewportResolvedDisplayModeVertical(),this.setState(t)}else this.wasDrawerOpenedInPrevState(e)||(this.addHiddenStyle(e),this.forceUpdate(),setTimeout(()=>{this.setBottomOverlayDrawerWidth()},0))}).then(()=>{this.setBottomOverlayDrawerWidth()})):this.isDrawerOpened(e)&&(!1===t[this.edgeToStateOpenedName(e)]||t[this.edgeToShouldChangeDisplayMode(e)]||t[this.edgeToDisplayName(e)]!=this.state[this.edgeToDisplayName(e)])&&(t[this.edgeToShouldChangeDisplayMode(e)]||(this.drawerOpener=document.activeElement),this.removeHiddenStyle(e),this.animateOpen(e).then(()=>{this.setBottomOverlayDrawerWidth();const t=this.getDrawerRef(e).current;t&&(e===d.DrawerConstants.stringStart&&null===this.startReflowDrawerResizeHandler?(this.startReflowDrawerResizeHandler=this.reflowDrawerResizeCallback.bind(this),i.addResizeListener(t,this.startReflowDrawerResizeHandler,50,!0)):e===d.DrawerConstants.stringEnd&&null===this.endReflowDrawerResizeHandler&&(this.endReflowDrawerResizeHandler=this.reflowDrawerResizeCallback.bind(this),i.addResizeListener(t,this.endReflowDrawerResizeHandler,50,!0)))}))}removeHiddenStyle(e){this.getDrawerWrapperRef(e).current?.classList.remove(d.DrawerConstants.styleDrawerHidden)}addHiddenStyle(e){this.getDrawerWrapperRef(e).current?.classList.add(d.DrawerConstants.styleDrawerHidden)}returnFocus(e){const t=this.getDrawerRef(e).current;t&&t.contains(this.elementWithFocusBeforeDrawerCloses)&&d.DrawerUtils.moveFocusToElementOrNearestAncestor(this.drawerOpener)}animateOpen(e){const t=w.Context.getContext(this.rootRef.current).getBusyContext().addBusyState({description:"Animation in progress"});return this.getDrawerResolvedDisplayMode(e)===d.DrawerConstants.stringReflow?a.expand(this.getRefToAnimate(e).current,d.DrawerUtils.getAnimationOptions("expand",e)).then(t):a.slideIn(this.getRefToAnimate(e).current,d.DrawerUtils.getAnimationOptions(d.DrawerConstants.stringSlideIn,e)).then(()=>{d.DrawerUtils.unwrapDrawerClippingArea(this.getDrawerRef(e).current)}).then(t)}animateClose(e){const t=w.Context.getContext(this.rootRef.current).getBusyContext().addBusyState({description:"Animation in progress"});if(this.getDrawerResolvedDisplayMode(e)===d.DrawerConstants.stringReflow)return a.collapse(this.getRefToAnimate(e).current,d.DrawerUtils.getAnimationOptions("collapse",e)).then(t);{const s=this.getDrawerRef(e).current;return a.slideOut(this.getRefToAnimate(e).current,d.DrawerUtils.getAnimationOptions(d.DrawerConstants.stringSlideOut,e)).then(()=>{d.DrawerUtils.unwrapDrawerClippingArea(s)}).then(t)}}edgeToStateOpenedName(e){return`${e}${d.DrawerUtils.capitalizeFirstChar(d.DrawerConstants.stringOpened)}`}edgeToPrevStateOpenedName(e){return`${e}${d.DrawerUtils.capitalizeFirstChar(d.DrawerConstants.stringOpened)}${d.DrawerConstants.stringPrevState}`}edgeToShouldChangeDisplayMode(e){return`${e}${d.DrawerConstants.stringShouldChangeDisplayMode}`}edgeToClosedWithEsc(e){return`${e}${d.DrawerConstants.stringClosedWithEsc}`}edgeToDisplayName(e){return`${e}${d.DrawerConstants.stringDisplay}`}edgeToStateToChangeTo(e){return`${e}${d.DrawerConstants.stringStateToChangeTo}`}openOrClosePopupDrawer(e,t){const s=n(this.getDrawerRef(e).current),r=g.getInstance(),a=this.getPopupServiceOptions(e,t);!1===this.isDrawerOpened(e)||this.shouldDrawerChangeDisplayMode(e)||this.getStateToChangeTo(e)?D.getStatus(s)===D.STATUS.OPEN&&r.close(a):this.isDrawerOpened(e)&&[D.STATUS.CLOSE,D.STATUS.UNKNOWN].indexOf(D.getStatus(s)>-1)&&(this.removeHiddenStyle(e),r.open(a))}shouldDrawerChangeDisplayMode(e){return this.state[this.edgeToShouldChangeDisplayMode(e)]}getStateToChangeTo(e){return this.state[this.edgeToStateToChangeTo(e)]}getPopupServiceOptions(e,t){const s=n(this.getDrawerRef(e).current),r={},a=g.OPTION;r[a.POPUP]=s,r[a.LAUNCHER]=n(document.activeElement),r[a.LAYER_SELECTORS]=d.DrawerConstants.DrawerLayoutStyleSurrogate,r[a.LAYER_LEVEL]=g.LAYER_LEVEL.TOP_LEVEL,r[a.POSITION]=this.getDrawerPosition(e),r[a.CUSTOM_ELEMENT]=!0;const i=g.EVENT;return r[a.EVENTS]={[i.POPUP_BEFORE_OPEN]:()=>this.beforeOpenHandler(e,t),[i.POPUP_AFTER_OPEN]:()=>this.afterOpenHandler(e,t),[i.POPUP_BEFORE_CLOSE]:()=>this.beforeCloseHandler(e),[i.POPUP_AFTER_CLOSE]:()=>this.afterCloseHandler(e,t),[i.POPUP_REFRESH]:()=>this.refreshHandler(e),[i.POPUP_REMOVE]:()=>this.destroyHandler(e)},r}beforeOpenHandler(e,t){d.DrawerUtils.disableBodyOverflow(),t[this.edgeToShouldChangeDisplayMode(e)]||(this.drawerOpener=document.activeElement);const s=this.getDrawerRef(e).current,r=n(s),a=this.getDrawerPosition(e);return e===d.DrawerConstants.stringBottom&&this.setBottomOverlayDrawerWidth(),r.show(),r.position(a),this.setStartEndOverlayDrawersHeight(),d.DrawerUtils.wrapDrawerWithClippingArea(s,a),null===this.drawerLayoutResizeHandler&&(this.drawerLayoutResizeHandler=this.drawerLayoutResizeCallback.bind(this)),i.addResizeListener(this.rootRef.current,this.drawerLayoutResizeHandler,50,!0),this.animateOpen(e)}setBottomOverlayDrawerWidth(){if(this.isDrawerOpened(d.DrawerConstants.stringBottom)&&this.getDrawerResolvedDisplayMode(d.DrawerConstants.stringBottom)!=d.DrawerConstants.stringReflow){const e=this.middleSectionRef.current.getBoundingClientRect().width;this.bottomRef.current.style.width=`${e}px`}}afterOpenHandler(e,t){d.DrawerUtils.enableBodyOverflow(),this.handleFocus(t);const s=this.getDrawerRef(e).current,r=n(s),a=D.getStatus(r);if(e===d.DrawerConstants.stringStart&&null===this.startOverlayDrawerResizeHandler?(this.startOverlayDrawerResizeHandler=this.overlayDrawerResizeCallback.bind(this,d.DrawerConstants.stringStart),i.addResizeListener(s,this.startOverlayDrawerResizeHandler,50,!0)):e===d.DrawerConstants.stringEnd&&null===this.endOverlayDrawerResizeHandler?(this.endOverlayDrawerResizeHandler=this.overlayDrawerResizeCallback.bind(this,d.DrawerConstants.stringEnd),i.addResizeListener(s,this.endOverlayDrawerResizeHandler,50,!0)):e===d.DrawerConstants.stringBottom&&null===this.bottomOverlayDrawerResizeHandler&&(this.bottomOverlayDrawerResizeHandler=this.overlayDrawerResizeCallback.bind(this,d.DrawerConstants.stringBottom),i.addResizeListener(s,this.bottomOverlayDrawerResizeHandler,50,!0)),a===D.STATUS.OPEN&&!this.isDrawerOpened(e)){const s=g.getInstance(),r=this.getPopupServiceOptions(e,t);s.close(r)}}handleFocus(e){this.state.startOpened&&e.startOpened!==this.state.startOpened&&this.setDrawerFocus(d.DrawerConstants.stringStart),this.state.endOpened&&e.endOpened!==this.state.endOpened&&this.setDrawerFocus(d.DrawerConstants.stringEnd),this.state.bottomOpened&&e.bottomOpened!==this.state.bottomOpened&&this.setDrawerFocus(d.DrawerConstants.stringBottom)}beforeCloseHandler(e){return d.DrawerUtils.disableBodyOverflow(),this.elementWithFocusBeforeDrawerCloses=document.activeElement,e===d.DrawerConstants.stringStart?(i.removeResizeListener(this.getDrawerRef(e).current,this.startOverlayDrawerResizeHandler),this.startOverlayDrawerResizeHandler=null):e===d.DrawerConstants.stringEnd?(i.removeResizeListener(this.getDrawerRef(e).current,this.endOverlayDrawerResizeHandler),this.endOverlayDrawerResizeHandler=null):e===d.DrawerConstants.stringBottom&&(i.removeResizeListener(this.getDrawerRef(e).current,this.bottomOverlayDrawerResizeHandler),this.bottomOverlayDrawerResizeHandler=null),this.removeDrawerLayoutResizeListener(),d.DrawerUtils.wrapDrawerWithClippingArea(this.getDrawerRef(e).current,this.getDrawerPosition(e)),this.animateClose(e)}afterCloseHandler(e,t){this[this.edgeToClosedWithEsc(e)]&&(this[this.edgeToClosedWithEsc(e)]=!1),d.DrawerUtils.enableBodyOverflow(),this.returnFocus(e);const s=n(this.getDrawerRef(e).current),r=D.getStatus(s);if(this.getDrawerRef(e).current&&this.getDrawerRef(e).current.removeAttribute("style"),this.getStateToChangeTo(e)){const t={},s={};s[this.edgeToStateToChangeTo(e)]=null,Object.assign(t,this.getStateToChangeTo(e),s),this.setState(t)}else if(this.shouldDrawerChangeDisplayMode(e)){const t={};t[this.edgeToShouldChangeDisplayMode(e)]=!1,t.viewportResolvedDisplayMode=this.getViewportResolvedDisplayMode(),t.viewportResolvedDisplayModeVertical=this.getViewportResolvedDisplayModeVertical(),this.setState(t)}else if(r===D.STATUS.CLOSE&&this.isDrawerOpened(e)){const s=g.getInstance(),r=this.getPopupServiceOptions(e,t);s.open(r)}else this.wasDrawerOpenedInPrevState(e)||(this.addHiddenStyle(e),this.forceUpdate());this.props.onOjClose?.({edge:e})}setStartEndOverlayDrawersHeight(){const e=d.DrawerUtils.getElementHeight(this.middleSectionRef.current)+"px",t=this.startRef.current;t&&this.getDrawerResolvedDisplayMode(d.DrawerConstants.stringStart)!=d.DrawerConstants.stringReflow&&(t.style.height=e);const s=this.endRef.current;s&&this.getDrawerResolvedDisplayMode(d.DrawerConstants.stringEnd)!=d.DrawerConstants.stringReflow&&(s.style.height=e)}},e.DrawerLayout.defaultProps={startOpened:!1,endOpened:!1,bottomOpened:!1,startDisplay:"auto",endDisplay:"auto",bottomDisplay:"auto"},e.DrawerLayout._metadata={slots:{"":{},start:{},end:{},bottom:{}},properties:{startOpened:{type:"boolean",writeback:!0},endOpened:{type:"boolean",writeback:!0},bottomOpened:{type:"boolean",writeback:!0},startDisplay:{type:"string",enumValues:["auto","overlay","reflow"]},endDisplay:{type:"string",enumValues:["auto","overlay","reflow"]},bottomDisplay:{type:"string",enumValues:["auto","overlay","reflow"]}},events:{ojBeforeClose:{cancelable:!0},ojClose:{}},extension:{_WRITEBACK_PROPS:["startOpened","endOpened","bottomOpened"],_READ_ONLY_PROPS:[]}},e.DrawerLayout=h=p([s.customElement("oj-drawer-layout")],e.DrawerLayout),Object.defineProperty(e,"__esModule",{value:!0})}),define("bundles/ojdrawerbundle",function(){});
//# sourceMappingURL=ojdrawerbundle.js.map