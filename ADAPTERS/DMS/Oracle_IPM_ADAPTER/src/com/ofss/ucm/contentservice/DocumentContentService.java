package com.ofss.ucm.contentservice;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;

import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 091026.1130.19937)

@WebService(wsdlLocation="/wsdls/DocumentContentService.wsdl",targetNamespace="http://imaging.oracle/", name="DocumentContentService")
@XmlSeeAlso(
  { com.ofss.ucm.contentservice.ObjectFactory.class })
public interface DocumentContentService
{
  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrieveRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrieve/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrieveResponse")
  @ResponseWrapper(localName="retrieveResponse", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveResponse")
  @RequestWrapper(localName="retrieve", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.Retrieve")
  @WebResult(targetNamespace="", name="documentData")
  public byte[] retrieve(@WebParam(targetNamespace="", name="documentId")
    String documentId)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/uploadDocumentRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/uploadDocument/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/uploadDocumentResponse")
  @ResponseWrapper(localName="uploadDocumentResponse", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.UploadDocumentResponse")
  @RequestWrapper(localName="uploadDocument", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.UploadDocument")
  @WebResult(targetNamespace="", name="uploadToken")
  public String uploadDocument(@WebParam(targetNamespace="", name="data")
    byte[] data, @WebParam(targetNamespace="", name="fileName")
    String fileName)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrieveVersionRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrieveVersion/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrieveVersionResponse")
  @ResponseWrapper(localName="retrieveVersionResponse", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveVersionResponse")
  @RequestWrapper(localName="retrieveVersion", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveVersion")
  @WebResult(targetNamespace="", name="documentData")
  public byte[] retrieveVersion(@WebParam(targetNamespace="", name="documentId")
    String documentId, @WebParam(targetNamespace="", name="versionId")
    long versionId)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrieveRenditionRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrieveRendition/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrieveRenditionResponse")
  @ResponseWrapper(localName="retrieveRenditionResponse", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveRenditionResponse")
  @RequestWrapper(localName="retrieveRendition", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveRendition")
  @WebResult(targetNamespace="", name="rendition")
  public com.ofss.ucm.contentservice.Rendition retrieveRendition(@WebParam(targetNamespace="",
      name="documentId")
    String documentId, @WebParam(targetNamespace="", name="withAnnotations")
    boolean withAnnotations, @WebParam(targetNamespace="", name="preserveColor")
    boolean preserveColor, @WebParam(targetNamespace="", name="outputType")
    com.ofss.ucm.contentservice.RenditionOutput outputType,
    @WebParam(targetNamespace="", name="pages")
    List<Integer> pages)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrieveVersionRenditionRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrieveVersionRendition/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrieveVersionRenditionResponse")
  @ResponseWrapper(localName="retrieveVersionRenditionResponse",
    targetNamespace="http://imaging.oracle/", className="com.ofss.ucm.contentservice.RetrieveVersionRenditionResponse")
  @RequestWrapper(localName="retrieveVersionRendition", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveVersionRendition")
  @WebResult(targetNamespace="", name="rendition")
  public com.ofss.ucm.contentservice.Rendition retrieveVersionRendition(@WebParam(targetNamespace="",
      name="documentId")
    String documentId, @WebParam(targetNamespace="", name="versionId")
    long versionId, @WebParam(targetNamespace="", name="withAnnotations")
    boolean withAnnotations, @WebParam(targetNamespace="", name="preserveColor")
    boolean preserveColor, @WebParam(targetNamespace="", name="outputType")
    com.ofss.ucm.contentservice.RenditionOutput outputType,
    @WebParam(targetNamespace="", name="pages")
    List<Integer> pages)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrievePageRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrievePage/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrievePageResponse")
  @ResponseWrapper(localName="retrievePageResponse", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrievePageResponse")
  @RequestWrapper(localName="retrievePage", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrievePage")
  @WebResult(targetNamespace="", name="renderResult")
  public com.ofss.ucm.contentservice.RenderResult retrievePage(@WebParam(targetNamespace="",
      name="documentId")
    String documentId, @WebParam(targetNamespace="", name="options")
    com.ofss.ucm.contentservice.RenderOptions options)
    throws com.ofss.ucm.contentservice.ImagingException;

  @WebMethod
  @Action(input="http://imaging.oracle/DocumentContentService/retrieveVersionPageRequest", fault =
      { @FaultAction(value="http://imaging.oracle/DocumentContentService/retrieveVersionPage/Fault/ImagingException",
          className=com.ofss.ucm.contentservice.ImagingException.class) },
    output="http://imaging.oracle/DocumentContentService/retrieveVersionPageResponse")
  @ResponseWrapper(localName="retrieveVersionPageResponse",
    targetNamespace="http://imaging.oracle/", className="com.ofss.ucm.contentservice.RetrieveVersionPageResponse")
  @RequestWrapper(localName="retrieveVersionPage", targetNamespace="http://imaging.oracle/",
    className="com.ofss.ucm.contentservice.RetrieveVersionPage")
  @WebResult(targetNamespace="", name="renderResult")
  public com.ofss.ucm.contentservice.RenderResult retrieveVersionPage(@WebParam(targetNamespace="",
      name="documentId")
    String documentId, @WebParam(targetNamespace="", name="versionId")
    long versionId, @WebParam(targetNamespace="", name="options")
    com.ofss.ucm.contentservice.RenderOptions options)
    throws com.ofss.ucm.contentservice.ImagingException;
}
